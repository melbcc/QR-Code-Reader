version: '3.9'

services:
  # ---- Public
  nginx:
    image: nginx:1.20-alpine
    restart: unless-stopped
    ports:
      - 443:443
      - 80:80
    volumes:
      # nginx config
      - ./nginx.prod.conf:/etc/nginx/conf.d/default.conf
      # shared with certbot (for https certs)
      - /srv/data/certbot/conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      # served content
      - srv_static:/srv/prod/static
      - srv_frontend:/srv/prod/frontend
    depends_on:
      - django
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # --- Internal
  django:
    build:
      context: ./webapp
      dockerfile: Dockerfile.prod
    command: "crond & gunicorn webapp.wsgi:application --bind 0.0.0.0:8000"
    restart: unless-stopped
    volumes:
      - ./webapp:/srv/app
      - srv_static:/srv/static
      - ./webapp/crontab:/etc/crontabs/django-jobs
    environment:
      - DJANGO_STATIC_ROOT=/srv/static
    env_file:
      - ./env/prod.env
    depends_on:
      - postgres

  postgres:
    image: postgres:12.0-alpine
    volumes:
      - srv_db:/var/lib/postgresql/data/
    restart: unless-stopped
    env_file:
      - ./env/prod.env

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - /srv/data/certbot/conf:/etc/letsencrypt/
      - certbot_www:/var/www/certbot/
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  # --- Builders
  vue:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    profiles: ["build"]
    volumes:
      - ./frontend/:/code/
      - env_frontend:/code/node_modules/
      - srv_frontend:/srv/frontend/
    environment:
      - VUE_OUTPUT_DIR=/srv/frontend/dist
      - VUE_PUBLIC_PATH=/app/
    env_file:
      - ./env/prod.env
    command: npm run build

volumes:
  # Served volumes
  srv_frontend:
  srv_static:
  srv_db:

  # Nginx specific
  certbot_www:

  # Environment(s)
  env_frontend:
